<template>
  <view class="padding-top-24">
    <view class="user">
      <view class="user-avatar" style="background:{{avatarColor}}">
        <text>{{avatarName}}</text>
      </view>
      <view class="user-info">
        <text class="user-name">{{user.name}}</text>
        <text class="user-role">{{currentTeam.team_user.role_name}}</text>
      </view>
      <view class="user-settings">
        <text class="ht-icon ht-gear" style="font-size: 40rpx"></text>
        <text>设置</text>
      </view>
    </view>
    <view class="card">
      <view @tap="handleItemTap({{item}})" wx:for="{{members}}" wx:key="{{index}}" wx:for-item="item" class="member">
        <view class="member-avatar" style="background:{{wxsUtils.avatarColor(item.color)}}">
          <text>{{wxsUtils.avatarName(item.name)}}</text>
        </view>
        <view class="member-info">
          <view>
            <text class="member-name">{{item.name}}</text>
            <text class="member-role">{{item.team_user.role_name}}</text>
          </view>
          <view>
            <text class="member-phone">{{item.phone ? item.phone : '未填写电话'}}</text>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import BasePage from 'BasePage'
import wxsUtils from '../wxs/utils.wxs'
import { api } from '@/config'
export default class Team extends BasePage {
  config = {
    navigationBarTitleText: '团队'
  }

  wxs = {
    wxsUtils
  }

  data = {
  }

  computed = {
    avatarName() {
      if (this.user.name) {
        return this.user.name.slice(-2)
      }
    },
    avatarColor() {
      return this.user.color ? this.user.color : '#2d8cf0'
    },
    members() {
      let list = [...this.allUsers]
      for (let index = 0; index < list.length; index++) {
        if (this.user.id === this.allUsers[index].id) {
          list.splice(index, 1)
          break
        }
      }
      return list
    }
  }

  methods = {
    handleItemTap(item) {
      if (item.id === this.user.id) {
        wepy.switchTab({
          url: 'me'
        })
      } else {
        wepy.navigateTo({
          url: `member?id=${item.id}&name=${item.name}`
        })
      }
    }
  }

  onLoad() {
    this.user = this.store().user
    this.currentTeam = this.store().currentTeam
    wepy.setNavigationBarTitle({ title: this.currentTeam.name })
    this.getAllUsersAndGroups()
  }

  async getAllUsersAndGroups() {
    const result = await this.request(api.user.all.method, api.user.all.url, {
      teamId: this.currentTeam.id,
      status: 1
    })
    this.allUsers = result.data.users
    this.store().allUsers = this.allUsers
    this.$apply()
  }
}
</script>

<style lang="stylus">
@import '../common/assets/style/variable'

.user
  position relative
  display flex
  align-items center
  margin 0 24rpx 48rpx
  padding 40rpx 32rpx
  background: linear-gradient(to right, #2d8cf0, #58adfc)
  border 1rpx solid #e0e0e0
  border-radius 16rpx
  box-shadow 0 0 6rpx rgba(0, 0, 0, 0.15)
  z-index 10
  transition all 0.2s ease
  &-avatar
    display flex
    align-items center
    justify-content center
    width 120rpx
    height 120rpx
    color #fff
    font-size 28rpx
    border 4rpx solid #d9d9d9
    border-radius 50%
  &-info
    padding-left 24rpx
    flex 1
  &-name
    display block
    color #fff
    font-size 36rpx
  &-role
    display block
    color #ddd
    font-size 28rpx
  &-settings
    display flex
    align-items center
    flex-shrink 0
    padding 32rpx 0
    color #d9d9d9
    font-size 28rpx
</style>
